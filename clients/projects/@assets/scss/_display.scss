@import './variables';

.block { display: block; }
.inline { display: inline; }
.inline-block { display: inline-block; }
.d-none { display: none; }

// Flexbox
.flex { display: flex; }
.flex-column { flex-direction: column; }
.flex-row { flex-direction: row; }

.justify-content-start { justify-content: flex-start; }
.justify-content-end{ justify-content: flex-end; }
.justify-content-center { justify-content: center; }
.justify-content-between { justify-content: space-between; }
.justify-content-around { justify-content: space-around; }
.justify-content-evenly { justify-content: space-evenly; }

.align-items-start { align-items: flex-start; }
.align-items-end{ align-items: flex-end; }
.align-items-center { align-items: center; }

.flex-grow-0 { flex-grow: 0; }
.flex-grow-1 { flex-grow: 1; }
.flex-shrink-0 { flex-shrink: 0; }
.flex-shrink-1 { flex-shrink: 1; }

// Media Query to hiding/showing (display prop) elements at breakpoints
@media only screen and (min-width: $screen-xs) {
  .d-none-xs {
    display: none;
  }

  .block-xs {
    display: block;
  }

  .flex-xs {
    display: flex;
  }
}

@media only screen and (min-width: $screen-sm) {
  .d-none-sm {
    display: none;
  }

  .block-sm {
    display: block;
  }

  .flex-sm {
    display: flex;
  }
}

@media only screen and (min-width: $screen-md) {
  .d-none-md {
    display: none;
  }

  .block-md {
    display: block;
  }

  .flex-md {
    display: flex;
  }
}

@media only screen and (min-width: $screen-lg) {
  .d-none-lg {
    display: none;
  }

  .block-lg {
    display: block;
  }

  .flex-lg {
    display: flex;
  }
}

@media only screen and (min-width: $screen-xl) {
  .d-none-xl {
    display: none;
  }

  .block-xl {
    display: block;
  }

  .flex-xl {
    display: flex;
  }
}

@media only screen and (min-width: $screen-xxl) {
  .d-none-xxl {
    display: none;
  }

  .block-xxl {
    display: block;
  }

  .flex-xxl {
    display: flex;
  }
}
